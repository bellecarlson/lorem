/*! updated; 02-27-2018 04:46 PM **/


Modulr.define("core.plugins:CountdownTimer",["require","AKAMAI_TIME_HELPER"],function(require,EST){function fireIntervalStack(){for(var id in CALLBACK_STACK){var callback=CALLBACK_STACK[id];"function"==typeof callback&&callback()}}function getTimerInfo(ms,maxTime){ms=ms<0?0:ms;var info,secs=getVal(ms,1e3),mins=getVal(secs,60),hrs=getVal(mins,60),days=getVal(hrs,24);switch(maxTime){case"hours":info={secs:secs%60,mins:mins%60,hrs:hrs};break;default:info={secs:secs%60,mins:mins%60,hrs:hrs%24,days:days}}for(var i in info)info[i]=(info[i]<10?"0":"")+info[i];return info.done=!(ms>0),info.raw_ms=ms,info}function getVal(val,divisor){return val>0?Math.floor(val/divisor):0}var INTERVAL=!1,CALLBACK_STACK={},INSTANCE_UID_COUNTER=0,STACK_COUNTER=0,allowedMaxTimes=["days","hours"],currentTime=EST.getCurrent().getTime(),setIntervalTimer=function(){clearInterval(INTERVAL),INTERVAL=setInterval(function(){currentTime+=1e3,fireIntervalStack()},1e3)};return setIntervalTimer(),function(config){function executeDoneStack(){for(var i=0;i<DONE_STACK.length;i++){var callback=DONE_STACK[i];"function"==typeof callback&&callback()}}var Proto=this;if(config=config||{},!config.endTime)return!1;INSTANCE_UID_COUNTER++;var INSTANCE_UID=INSTANCE_UID_COUNTER,endTime=config.endTime.getTime(),maxTime=$.inArray(config.maxTime,allowedMaxTimes)?config.maxTime:"days",diff=!1,STACK_ID=[],DONE_STACK=[];currentTime=config.currentTime?config.currentTime.getTime():EST.getCurrent().getTime(),setIntervalTimer(),Proto._END_TIME=endTime,Proto.onTick=function(callback){if("function"!=typeof callback)return!1;diff=endTime-currentTime;var info=getTimerInfo(diff,maxTime);if(callback(info),info.done)executeDoneStack();else{STACK_COUNTER++;var key=[INSTANCE_UID,"stack",STACK_COUNTER].join("_");STACK_ID.push(key),CALLBACK_STACK[key]=function(){if(diff=endTime-currentTime,info=getTimerInfo(diff,maxTime),callback(info),info.done){try{delete CALLBACK_STACK[key]}catch(err){CALLBACK_STACK[key]=null}executeDoneStack()}}}},Proto.onDone=function(callback){Proto.isDone()?callback():DONE_STACK.push(callback)},Proto.getInfo=function(){return getTimerInfo(endTime-currentTime,maxTime)},Proto.isDone=function(){return!(endTime-currentTime>0)},Proto.stopCountdowns=function(all){if(all)clearInterval(INTERVAL);else for(var i=0;i<STACK_ID.length;i++){var key=STACK_ID[i];try{delete CALLBACK_STACK[key]}catch(err){CALLBACK_STACK[key]=null}}}}});